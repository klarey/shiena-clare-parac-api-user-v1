<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="app-error-handler-test-suite.xml" />
	<munit:test name="app-error-handler-test-suite-default-error-test" doc:id="4400d217-e2b5-4948-957a-df3f450258ac" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when DB connection issue" doc:id="3b018b67-cb76-4fde-983e-75b01a78289a" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select from DB" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8f80e461-867c-49ee-9734-4fd30daff008" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="b92a51d0-12de-4b63-bc86-fefe26d5d3c5" >
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-users-subflow" doc:id="309eb86c-d263-4abd-9428-f8c945cc2dcc" name="get:\users:api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 500" doc:id="3366c90e-ef68-497b-9e17-5809122decdc" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("500")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="6cfb5dc7-84b3-4ecd-9dc0-3e1ca112564c" actual="#[payload]" expected="#[readUrl('classpath://out/appErrors/default-error-response.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Set httpStatus" doc:id="7fb946f7-059f-4f71-ab67-6015ceba885d" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set httpStatus" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1cfc2b8-9a1c-4c95-9d92-cb4bcfd82e12" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="app-error-handler-test-suite-inactive-user-test" doc:id="f4db3a92-c089-45d3-9752-0b298c1042b1" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when user is inactive" doc:id="0e66a285-af44-44a0-aaa5-9ddd37adcd76" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select from DB" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8f80e461-867c-49ee-9734-4fd30daff008" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://out/mock/get-inactive-user-by-username-mock-db-response.json')]" mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="ad1dcb0e-df7f-4805-8f65-4faf0131d5f9">
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	},&#10;	"uriParams": {&#10;		"username": "jenniesummers"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-user-by-username-subflow" doc:id="b7a08a32-ed78-4de8-bc32-db9fd2a20dda" name="get:\users\(username):api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 404" doc:id="60cc6ec3-0d0f-4224-9c75-4f593f849cfb" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("404")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="65ac6973-6294-45e7-ad4a-222bab5bc326" actual="#[payload]" expected="#[readUrl('classpath://out/appErrors/inactive-user-response.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Set httpStatus" doc:id="ca75f963-4cd8-431a-8079-730b6ea0ffa1" processor="set-variable" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set httpStatus" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1cfc2b8-9a1c-4c95-9d92-cb4bcfd82e12" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="app-error-handler-test-suite-user-not-found-test" doc:id="d4477e87-afd9-4f61-8dfb-fc6ad9d60d00" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when user not found" doc:id="b3106356-b1f8-4e61-9657-d45f92498c91" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select from DB" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8f80e461-867c-49ee-9734-4fd30daff008" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{} as Object {class: "java.util.HashMap"}]' mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="a758f726-6337-4807-a4d9-65f0357edcf6">
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	},&#10;	"uriParams": {&#10;		"username": "jenniesummersss"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-user-by-username-subflow" doc:id="2e3e95dd-8f75-490a-94b1-c0f1b86f3f10" name="get:\users\(username):api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 404" doc:id="14d605fb-b7c1-4a9e-84dc-b923d3dbc778" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("404")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="b54f0627-34a1-4cc1-a26c-1f8207d4a0df" actual="#[payload]" expected="#[readUrl('classpath://out/appErrors/user-with-given-username-not-found-response.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Set httpStatus" doc:id="637820a1-f86e-4b3a-a590-db449206cdf7" processor="set-variable" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set httpStatus" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1cfc2b8-9a1c-4c95-9d92-cb4bcfd82e12" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="app-error-handler-test-suite-no-user-retrieved-from-db-test" doc:id="6543d587-c72c-4bd3-a8cf-fcfbd88d48d9" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when No User Retrieved from DB" doc:id="ea3ffa3e-c16a-4160-9b5d-f7e4710cbc51" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select from DB" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8f80e461-867c-49ee-9734-4fd30daff008" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;output application/java  &#10;---&#10;{} as Object {class: "java.util.HashMap"}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d9b3b5f7-6522-4496-a3e5-7c746c4ff86a" >
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-users-subflow" doc:id="00965981-ddff-4637-a523-ceccdea4ff4f" name="get:\users:api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 404" doc:id="ec7b597a-80f7-46da-8d80-77a15325b01e" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("404")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="4637e54c-edaf-49b1-9ea2-0141e1833cd0" actual="#[payload]" expected="#[readUrl('classpath://out/appErrors/no-user-retrieved-from-db-response.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Set httpStatus" doc:id="5f45c372-82b2-490d-8828-a697956a7900" processor="set-variable" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set httpStatus" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1cfc2b8-9a1c-4c95-9d92-cb4bcfd82e12" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="app-error-handler-test-suite-no-active-users-test" doc:id="4d396477-e316-4845-a60d-323d7a9a14e8" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when All Users are Inactive" doc:id="9baa260b-6018-4ec6-a479-fd4f2af65d30" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select from DB" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8f80e461-867c-49ee-9734-4fd30daff008" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://out/mock/get-all-inactive-users-mock-db-response.json')]" mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="2b8039b5-0bf6-478d-b22c-95f57f2b6b93" >
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-users-subflow" doc:id="9f2f7325-1bec-4079-92eb-3b078d938c1e" name="get:\users:api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 404" doc:id="e11dba67-a642-4e72-bd50-9da9c39780c1" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("404")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="b7abc2ad-5d4a-4769-921e-264b4ee98224" actual="#[payload]" expected="#[readUrl('classpath://out/appErrors/no-active-user-retrieved-from-db-response.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Set httpStatus" doc:id="4d890b59-b666-4d6b-ab94-5f2517cd88ca" processor="set-variable" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set httpStatus" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1cfc2b8-9a1c-4c95-9d92-cb4bcfd82e12" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="app-error-handler-test-suite-error-encountered-while-writing-to-db-test" doc:id="fb3af9da-6a47-44c1-bc85-e6261c195e03" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Error Encountered while Writing to DB" doc:id="86585ace-c9cb-48d4-8055-bfc0699df398" processor="db:stored-procedure" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Insert into Account and UserDetails Tables" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="6f50906a-3b66-4cf5-abea-9cb253467def" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="MULE:UNKNOWN" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="a7ea1c0c-0d6d-488d-a17a-b0b45fdb4e12">
				<munit:payload value='#[{&#10;	"users": [{&#10;			"username": "testaaaa",&#10;			"fullname": "Test Aaa",&#10;			"birthday": "02-05-1965",&#10;			"gender": "male",&#10;			"dateRegistered": "20-08-2006"&#10;		},&#10;		{&#10;			"username": "testbbbb",&#10;			"fullname": "Test Bbb",&#10;			"birthday": "11-06-1955",&#10;			"gender": "female",&#10;			"dateRegistered": "25-09-2007"&#10;		}&#10;	]&#10;}]' />
				<munit:attributes value='#[{&#10;	"headers": {&#10;		"requestCode": "aOEF3M2cEG0204NO"&#10;	}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to create-users-subflow" doc:id="36df293f-ac61-4c55-8862-e8ab83e89bf2" name="post:\users:application\json:api-user-v1-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that Status Code is 200" doc:id="9066ea3a-7dee-4077-98d1-0045552bdc7e" expression="#[attributes.statusCode]" is='#[MunitTools::equalTo("200")]' />
			<munit-tools:assert-equals doc:name="Assert that Response Payload is as Expected" doc:id="48e6a83c-b6ec-470c-8f51-55943892711e" actual="#[payload]" expected="#[readUrl('classpath://in/create-users-success.json')]" />
			<munit-tools:verify-call doc:name="Verify call to Log End" doc:id="c59144d5-165e-4244-bf4a-0d6bed86cf94" processor="json-logger:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Log End" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="cceb9b80-5ea7-4cbc-a79f-0bb21cac540d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>
